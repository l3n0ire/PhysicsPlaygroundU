{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar LoggingService_1 = require(\"./LoggingService\");\n\nvar UnityLoaderService =\n/** @class */\nfunction () {\n  function UnityLoaderService() {\n    /**\n     * Reference to the document head.\n     * @type {HTMLHeadElement}\n     * @private\n     */\n    this.documentHead = document.getElementsByTagName(\"head\")[0];\n  }\n  /**\n   * Appends the Unity loader script to the window. When it's loaded a callback will\n   * be triggered. NOTE: This can't be a promisse due to JavaScript compatibilty.\n   * @param {string} source the path to the Unity loader file\n   * @param {Function} onLoad when the script is loaded\n   * @public\n   */\n\n\n  UnityLoaderService.prototype.append = function (source, onLoad) {\n    var _this = this;\n\n    if (typeof this.unityLoaderScript !== \"undefined\") if (source === this.unityLoaderScript.src) {\n      return onLoad();\n    } else {\n      this.unityLoaderScript.remove();\n    }\n    window.fetch(source).then(function (_response) {\n      if (_response.status >= 400) return LoggingService_1.loggingService.errorUnityLoaderNotFound(_response.status);\n\n      _response.text().then(function (_text) {\n        if (_text.trim().charAt(0) === \"<\") return LoggingService_1.loggingService.errorUnityLoaderNotFound(\"error doc\");\n        _this.unityLoaderScript = document.createElement(\"script\");\n        _this.unityLoaderScript.type = \"text/javascript\";\n        _this.unityLoaderScript.async = true;\n        _this.unityLoaderScript.src = source;\n\n        _this.unityLoaderScript.onload = function () {\n          if (typeof window.UnityLoader === \"undefined\") return LoggingService_1.loggingService.errorUnityLoaderNotFound();\n          onLoad();\n        };\n\n        _this.documentHead.appendChild(_this.unityLoaderScript);\n      }).catch(function (_reason) {\n        return LoggingService_1.loggingService.errorUnityLoaderNotFound(_reason);\n      });\n    }).catch(function (_reason) {\n      return LoggingService_1.loggingService.errorUnityLoaderNotFound(_reason);\n    });\n  };\n\n  return UnityLoaderService;\n}();\n\nexports.default = UnityLoaderService;","map":null,"metadata":{},"sourceType":"script"}